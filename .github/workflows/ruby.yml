# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:
    name: Build and test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: all_sorns
          POSTGRES_DB: all_sorns_test
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # if you need redis
      # redis:
      #   image: redis
      #   ports:
      #   - 6379:6379
      #   options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@v1
      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 10.13.0
      - name: Cache npm dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install linux dependencies
        run: |
          sudo apt-get -yqq install libpq-dev build-essential libcurl4-openssl-dev
      - name: install ruby dependencies
        run: |
          bundle install --jobs 4 --retry 3
      - name: install javascript dependencies
        run: yarn install
      - name: Setup test database
        env:
          RAILS_ENV: test
          PGHOST: localhost
          POSTGRES_DB: all_sorns_test
          POSTGRES_USER: all_sorns
          POSTGRES_PASSWORD: postgres
        run: |
          cp config/database.ci.yml config/database.yml
          rake db:create db:migrate

      - name: Run rails tests
        env:
          PGHOST: localhost
          POSTGRES_DB: all_sorns_test
          POSTGRES_USER: all_sorns
          POSTGRES_PASSWORD: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}
          RAILS_ENV: test
        run: rspec
  deploy:
    name: Deploy to cloud.gov
    runs-on: ubuntu-latest
    steps:
      - name: Install cf cli
        run: |
          sudo apt-get update
          sudo apt-get install wget gnupg2 apt-transport-https
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install cf-cli
          cf add-plugin-repo CF-Community https://plugins.cloudfoundry.org
          cf install-plugin blue-green-deploy -r CF-Community -f
      - name: Run deployment script
        env:
          TEST: "hello worlds"
        run: pwd 

